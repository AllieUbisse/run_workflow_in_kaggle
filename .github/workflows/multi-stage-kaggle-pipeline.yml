name: Kaggle Pipeline with Dynamic Kernel IDs

on:
  workflow_dispatch:

jobs:
  kaggle-pipeline:
    runs-on: ubuntu-latest

    env:
      STAGES: preprocessing train validation inference

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Dependencies
      run: |
        pip install kaggle jq

    - name: Configure Kaggle Credentials
      run: |
        mkdir -p ~/.kaggle
        echo "{\"username\":\"${{ secrets.KAGGLE_USERNAME }}\",\"key\":\"${{ secrets.KAGGLE_KEY }}\"}" > ~/.kaggle/kaggle.json
        chmod 600 ~/.kaggle/kaggle.json

    - name: Generate Unique Run ID
      id: generate_id
      run: |
        TIMESTAMP=$(date +%Y%m%d%H%M%S)
        HASH=$(echo "$TIMESTAMP" | md5sum | cut -c1-6)
        echo "run_id=${TIMESTAMP}-${HASH}" >> $GITHUB_OUTPUT

    - name: Push and Run Kernels
      run: |
        for STAGE in $STAGES; do
          echo "ðŸ”§ Processing stage: $STAGE"
          cd workflows/$STAGE
          
          # Generate dynamic kernel ID
          KERNEL_ID="${{ secrets.KAGGLE_USERNAME }}/${STAGE}-pipeline-${{ steps.generate_id.outputs.run_id }}"
          TITTLE_ID="${STAGE}-pipeline-${{ steps.generate_id.outputs.run_id }}"
          echo "ðŸ“Œ Kernel ID: $KERNEL_ID"

          # Inject dynamic ID into metadata
          jq --arg id "$KERNEL_ID" '.id = $id' kernel-metadata.json > tmp && mv tmp kernel-metadata.json
          jq --arg title "$TITTLE_ID" '.title = $title' kernel-metadata.json > tmp && mv tmp kernel-metadata.json

          # Push and run
          kaggle kernels push 
          kaggle kernels output "$KERNEL_ID"

          cd - > /dev/null
        done
